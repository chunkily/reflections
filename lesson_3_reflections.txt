When would you want to use a remote repository rather than keeping all your work local?
    When you want to be able to work on a project with other people or from multiple computers

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
    The same reason why we do not want to do automatic merging. 
    So we can be more sure of the state of the current repository

Describe the differences between forks, clones and branches. When would you use one instead of another
    fork: Creating a github repository from another github repository
          use it when you want to credit someones original work
    clone: Creating a local repository from another repository (either on github or local)
           use it when you want to be able to work on a project offline using your local machine
    branch: Create a branch that will have a seperated HEAD as the repository
           use it when trying out something experimental or adding features
           
What is the benefit of having a copy of the last known state of the remote stored locally?
    Rather than merging automatically with pull, fetch allows us to see whether there might be any conflicts
    before doing anything.
    
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
    working on the same keyboard like that one scene in ncsi? (kidding)
    if using git alone we may be able to work on the same repository if it were stored on a local cloud
    if using github, we do not need that. but then we would need to pay for a private repository.
    
When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
    when working collaboratively, it is better to make a branch, make our changes there before merging them into master
    this way, the project leader is more able to see the changes made before commiting them into master.
